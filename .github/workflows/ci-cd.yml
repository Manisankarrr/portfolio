name: CI & CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKERHUB_IMAGE: manisankarrr/portfolio  # Docker Hub: username/repo remains "portfolio"
  NODE_VERSION: 18

jobs:

  # ── Job 1: Build & Push Docker Image to Docker Hub ──
  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & push Docker image to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_IMAGE }}:latest  # Pushes: manisankarrr/portfolio:latest

  # ── Job 2: Build Vite Site & Deploy to Netlify ──
  netlify:
    name: Build & Deploy to Netlify
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build production bundle
        run: npm run build

      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      - name: Deploy to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          netlify deploy \
            --dir=dist \
            --prod \
            --site=$NETLIFY_SITE_ID

  # ── Job 3: Build & Push Docker Image to AWS ECR ──
  ecr:
    name: Build & Push to AWS ECR
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push to ECR
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.ECR_REPO }}:latest  # This will push to your ECR repository "portfolio:latest"

      - name: Notify success
        run: echo "✅ Docker image 'portfolio' pushed to AWS ECR and Docker Hub!"
        if: success()
